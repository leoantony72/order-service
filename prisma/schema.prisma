generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model cart {
  cart_id      String   @id @db.VarChar(13)
  userid       String   @db.VarChar(11)
  pid          String   @db.VarChar(11)
  quantity     Int      @default(1) @db.SmallInt
  date_created DateTime @db.Timestamp(6)
  products     products @relation(fields: [pid], references: [pid], onDelete: Cascade)
  users        users    @relation(fields: [userid], references: [userid], onDelete: Cascade)

  @@index([userid], map: "cart_user_id")
}

model discount {
  id               String   @id @db.VarChar(11)
  coupon           String   @db.VarChar(100)
  description      String?  @db.VarChar(300)
  discount_percent Decimal? @db.Decimal(12, 2)
  active           Boolean  @default(false)
  created_at       DateTime @db.Timestamp(6)
  products         products @relation(fields: [id], references: [pid], onDelete: Cascade)

  @@index([id], map: "idx_dis_id")
}

model inventory {
  id       String   @id @db.VarChar(11)
  quantity Int?
  products products @relation(fields: [id], references: [pid], onDelete: Cascade)

  @@index([id], map: "idx_inv_id")
}

model order_items {
  order_item_id String   @id @db.VarChar(12)
  order_id      String
  item_id       String   @db.VarChar(11)
  item_quantity Decimal  @db.Decimal
  products      products @relation(fields: [item_id], references: [pid], onDelete: NoAction, onUpdate: NoAction)
  orders        orders   @relation(fields: [order_id], references: [order_id], onDelete: NoAction, onUpdate: NoAction)

  @@index([order_item_id], map: "orderidx_item_id")
  @@index([item_id], map: "orditemidx_id")
}

model orders {
  order_id           String        @id
  customer_id        String        @db.VarChar(11)
  total              Decimal       @db.Decimal(12, 2)
  billing_address_id String        @db.VarChar(11)
  order_status       String?       @db.VarChar(100)
  payment_type       String        @db.VarChar(40)
  date_created       DateTime      @db.Timestamp(6)
  order_items        order_items[]

  @@index([customer_id], map: "order_cust_id")
  @@index([order_id], map: "orderidx_id")
}

model product_category {
  id       String   @id @db.VarChar(11)
  name     String   @db.VarChar(40)
  products products @relation(fields: [id], references: [pid], onDelete: Cascade)

  @@index([id], map: "idx_cat_id")
}

model products {
  pid              String            @id @db.VarChar(11)
  title            String            @db.VarChar(280)
  image            String            @db.VarChar
  created_at       DateTime          @db.Timestamp(6)
  summary          String            @db.VarChar(325)
  price            Decimal           @db.Decimal(12, 2)
  cart             cart[]
  discount         discount?
  inventory        inventory?
  order_items      order_items[]
  product_category product_category?
  ratings          ratings[]

  @@index([pid], map: "idx_pid")
}

model tokens {
  userid String  @db.VarChar(11)
  token  String  @unique
  expiry String?
  users  users   @relation(fields: [userid], references: [userid], onDelete: Cascade)
}

model user_address {
  id            String  @id @db.VarChar(11)
  userid        String  @db.VarChar(11)
  address_line1 String? @db.VarChar(255)
  address_line2 String? @db.VarChar(255)
  city          String? @db.VarChar(255)
  postal_code   String? @db.VarChar(45)
  country       String? @db.VarChar(100)
  mobile        String? @db.VarChar(50)
  users         users   @relation(fields: [userid], references: [userid], onDelete: Cascade)

  @@index([userid], map: "idx_user_add_id")
}

model user_payment {
  id           String @id @db.VarChar(11)
  userid       String @db.VarChar(11)
  payment_type String @db.VarChar(50)
  users        users  @relation(fields: [userid], references: [userid], onDelete: Cascade)

  @@index([userid], map: "idx_user_pay_id")
}

model users {
  userid        String         @id @db.VarChar(11)
  username      String         @unique @db.VarChar(255)
  email         String         @unique @db.VarChar(255)
  user_role     String         @default("USER") @db.VarChar(25)
  passwordhash  String
  registered_at DateTime       @db.Timestamp(6)
  user_ip       String?        @db.VarChar(50)
  active        Boolean        @default(false)
  token         String?        @unique
  expiry        String?
  cart          cart[]
  ratings       ratings[]
  tokens        tokens[]
  user_address  user_address[]
  user_payment  user_payment[]

  @@index([userid], map: "idx_userid")
}

model ratings {
  rid           String    @id @db.VarChar(12)
  pid           String?   @db.VarChar(11)
  userid        String?   @db.VarChar(11)
  rating_number Int
  comment       String    @db.VarChar(300)
  submitted     DateTime  @db.Timestamp(6)
  products      products? @relation(fields: [pid], references: [pid], onDelete: NoAction, onUpdate: NoAction)
  users         users?    @relation(fields: [userid], references: [userid], onDelete: NoAction, onUpdate: NoAction)
}
